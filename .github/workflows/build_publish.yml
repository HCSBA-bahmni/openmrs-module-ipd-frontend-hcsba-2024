name: 🏗️ Build and Publish

on:
  push:
    branches:
      - main
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - "**.md"
  workflow_run:
    workflows: [Pull Translations from Transifex]
    types: [completed]
    branches:
      - main
  workflow_dispatch:

jobs:
  pull-translations:
    name: Pull Translations From Transifex
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Listar archivos en el directorio .tx
        run: ls -la .tx/
      - name: Instalar Cliente de Transifex
        run: |
          curl -o transifex.sh https://raw.githubusercontent.com/transifex/cli/master/install.sh
          bash transifex.sh
          mkdir -p $HOME/bin
          mv tx $HOME/bin/tx
        shell: bash
      
      - name: Configurar PATH para el cliente de Transifex
        run: echo "$HOME/bin:$PATH" >> $GITHUB_PATH
      
      - name: Verificar instalación del cliente Transifex
        run: $HOME/bin/tx --version
      
      - name: Pull Translations from Transifex
        run: $HOME/bin/tx pull -l es
        env:
          TX_TOKEN: ${{ secrets.TX_TOKEN }}

  build-publish-docker:
    name: 🏗️ Build & Publish Docker Image
    needs: pull-translations # Espera a que termine 'pull-translations'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Verificar traducciones descargadas
        run: ls -la public/i18n/
      - name: Set env.ARTIFACT_VERSION
        run: |
          wget -q https://raw.githubusercontent.com/Bahmni/bahmni-infra-utils/main/setArtifactVersion.sh && chmod +x setArtifactVersion.sh
          ./setArtifactVersion.sh
          rm setArtifactVersion.sh
      - uses: actions/checkout@v4
      - name: 📥 Use Node.js 14.x
        uses: actions/setup-node@v4
        with:
          node-version: 14.x
      - name: 📥 Install dependencies
        run: yarn install
      - name: 🏗️ Build
        run: yarn build
      #- name: 🔍 Test
      #  run: yarn test:ci
      - name: 🖥️ Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: 🖥️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: 🔐 Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: 🐳 Docker Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: package/docker/Dockerfile
          push: true
          tags: |
            hcsba/microfrontend-ipd-hcsba-2024:${{ env.ARTIFACT_VERSION }}
            hcsba/microfrontend-ipd-hcsba-2024:latest

  trigger-workflow:
    name: 🔁 Trigger workflow to deploy to Docker env
    needs:
      - build-publish-docker
    runs-on: ubuntu-latest
    env:
      ORG_NAME: HCSBA-bahmni
      REPOSITORY_NAME: openmrs-module-ipd-frontend-hcsba-2024
      EVENT_TYPE: bahmni-ipd-microfrontend-event
    steps:
      - name: 🔧 Create repository_dispatch
        run: |
          trigger_result=$(curl -s -o trigger_response.txt -w "%{http_code}" -X POST -H "Accept: application/vnd.github.v3+json" -H 'authorization: Bearer ${{ secrets.BAHMNI_PAT }}' https://api.github.com/repos/${ORG_NAME}/${REPOSITORY_NAME}/dispatches -d '{"event_type":"'"${EVENT_TYPE}"'"}')
          if [ $trigger_result == 204 ]; then
            echo "✅ Trigger to $ORG_NAME/$REPOSITORY_NAME Success"
          else
            echo "❌ Trigger to $ORG_NAME/$REPOSITORY_NAME Failed"
            cat trigger_response.txt
            exit 1
          fi
